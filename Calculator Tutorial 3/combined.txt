
c:\users\yoges\desktop\semester 6\sad alternate\calculator tutorial 3\src\com\mangnaik\yogesh\server\ClientHandler.java
************************************************************************
package com.mangnaik.yogesh.server;

import com.mangnaik.yogesh.calculator.Calculator;
import com.mangnaik.yogesh.networkmanager.NetworkManagerServer;

import java.net.Socket;

/**
 * Created by Yogesh on 2/2/2018.
 */
class ClientHandler {

    private Thread thread;
    private Runnable runnable;
    private String history;
    private Calculator calculator;

    ClientHandler(Socket socket) {
        init(socket);
    }

    private void init(Socket socket){
        NetworkManagerServer networkManager = new NetworkManagerServer(socket);
        calculator = new Calculator();
        history = "";
        runnable = () -> {
            while (true) {
                System.out.println("ClientHandler is receiving");
                String query = networkManager.listen();
                System.out.println(query);
                double answer = calculator.evaluate(query);
                networkManager.send(answer+"");
            }
        };
        thread = new Thread(runnable);
        thread.start();
    }
}




c:\users\yoges\desktop\semester 6\sad alternate\calculator tutorial 3\src\com\mangnaik\yogesh\server\Server.java
************************************************************************
package com.mangnaik.yogesh.server;

import java.io.DataInputStream;
import java.io.DataOutputStream;
import java.io.IOException;
import java.net.ServerSocket;
import java.net.Socket;
import java.util.ArrayList;
import java.util.List;
import com.mangnaik.yogesh.calculator.Calculator;

/**
 * Created by Yogesh on 2/2/2018.
 */
public class Server {

    private ServerSocket socket;
    private List<ClientHandler> clients = new ArrayList<>();

    private Server(){
        Calculator calculator = new Calculator();
        init();
    }

    private void init(){
        try {
            socket = new ServerSocket(8192);
        } catch (IOException e) {
            e.printStackTrace();
            System.out.println("Failed to create Server!!");
        }
        while(true){
            Socket s;
            try{
                s = socket.accept();
                System.out.println("A new client has connected");
                clients.add(new ClientHandler(s));
            } catch (IOException e) {
                e.printStackTrace();
                break;
            }
        }
    }

    public static void main(String[] args){
        new Server();
    }
}


c:\users\yoges\desktop\semester 6\sad alternate\calculator tutorial 3\src\com\mangnaik\yogesh\user\User.java
************************************************************************
package com.mangnaik.yogesh.user;

import com.mangnaik.yogesh.networkmanager.NetworkManagerClient;

/**
 * Created by Yogesh on 2/2/2018.
 */
public class User {

    private UserUI ui;
    private NetworkManagerClient networkManager;

    public static void main(String args[]) {
        new User();
    }

    private User() {
        ui = new UserUI();
        networkManager = new NetworkManagerClient("localhost", 8192);
        init();
    }

    private void init(){
        networkManager.createConnection();
        String query = "";
        while(!query.equals("exit")){
            query = ui.getInput();
            if(!query.equals("")){
                String ans;
                ans = networkManager.send(query);
                ui.showResult(ans);
            }
        }
    }
}



c:\users\yoges\desktop\semester 6\sad alternate\calculator tutorial 3\src\com\mangnaik\yogesh\user\UserUI.java
************************************************************************
package com.mangnaik.yogesh.user;

import java.util.Scanner;

/**
 * Created by Yogesh on 2/15/2018.
 */
public class UserUI {
    Scanner scan = new Scanner(System.in);

    public String getInput(){
        String query = scan.nextLine();
        return query;
    }

    public void showResult(String answer){
        System.out.println(answer);
    }
}


