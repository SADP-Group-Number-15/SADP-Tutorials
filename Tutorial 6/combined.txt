
c:\users\yoges\desktop\semester 6\sad alternate\tutorial 6\src\tutorial\pkg6\Composite_tester.java
************************************************************************
/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package tutorial.pkg6;

import java.util.Stack;

/**
 *
 * @author Jatin
 */
public class Composite_tester {
 
 private Stack<Expr_Component> values = null;
 private Stack<Character> ops = null;
 private char[] tokens = null;
 private String s="";
    
 public Composite_tester(String s){
    this.s=s;   
 }
 

 public double calculate(){
   
    tokens = s.toCharArray();
    values = new Stack<>();
    ops = new Stack<>();
    
    for (int i = 0; i < tokens.length; i++){
        if (tokens[i] == ' ')
            continue;

        if ((tokens[i] >= '0' && tokens[i] <= '9') || (tokens[i]=='.')){
            StringBuffer sbuf = new StringBuffer();
            while (i < tokens.length &&((tokens[i] >= '0' && tokens[i] <= '9') || (tokens[i]=='.')))
                sbuf.append(tokens[i++]);
            i--;
            values.push(new Expr_leaf(Double.parseDouble(sbuf.toString())));
        }

        else if (tokens[i] == '+' || tokens[i] == '-' || tokens[i] == '*' || tokens[i] == '/'){
            
            while (!ops.empty() && hasPrecedence(tokens[i], ops.peek()))
              values.push(new Expr_leaf((new Expr_Composite(ops.pop(), values.pop(), values.pop())).calculate()));

            ops.push(tokens[i]);
        }
    }
    
    while (!ops.empty())
    values.push(new Expr_leaf((new Expr_Composite(ops.pop(), values.pop(), values.pop())).calculate()));
    return (values.pop()).calculate();
    
}
 
public static boolean hasPrecedence(char op1, char op2)
    {
        return !((op1 == '*' || op1 == '/') && (op2 == '+' || op2 == '-'));
    }  
}



c:\users\yoges\desktop\semester 6\sad alternate\tutorial 6\src\tutorial\pkg6\Expr_Component.java
************************************************************************
package tutorial.pkg6;

/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */

/**
 *
 * @author Jatin
 */
public interface Expr_Component {
public double calculate();    
}



c:\users\yoges\desktop\semester 6\sad alternate\tutorial 6\src\tutorial\pkg6\Expr_Composite.java
************************************************************************
/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package tutorial.pkg6;

import java.util.Stack;

/**
 *
 * @author Jatin
 */
public class Expr_Composite implements Expr_Component{
    
    private char op;
    private Expr_Component a;
    private Expr_Component b;
    
    public Expr_Composite( char op, Expr_Component b, Expr_Component a){
       this.a=a;
       this.b=b;
       this.op=op;
   }
    
    @Override
    public double calculate(){
        switch (op)
        {
            case '+':
                return Add(a,b);
            case '-':
                return Sub(a,b);
            case '*':
                return Mul(a,b);
            case '/':
                return Div(a,b);
        }
        return 0;
    }

    public double Add(Expr_Component left, Expr_Component right){
        return left.calculate() + right.calculate();
    }
    
    public double Sub(Expr_Component left, Expr_Component right){
        return left.calculate() - right.calculate();
    }
    public double Mul(Expr_Component left, Expr_Component right){
        return left.calculate() * right.calculate();
    }
    
    public double Div(Expr_Component left, Expr_Component right){
        if (right.calculate() == 0)
                throw new
                UnsupportedOperationException("Cannot divide by zero");
        return left.calculate() / right.calculate();
    }
    
}






c:\users\yoges\desktop\semester 6\sad alternate\tutorial 6\src\tutorial\pkg6\Expr_leaf.java
************************************************************************
/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package tutorial.pkg6;

/**
 *
 * @author Jatin
 */
public class Expr_leaf implements Expr_Component{
    

    double value;

    public Expr_leaf(double value) {
        this.value = value;
    }

    @Override
    public double calculate() {
        return value;
    }
}



c:\users\yoges\desktop\semester 6\sad alternate\tutorial 6\src\tutorial\pkg6\Main.java
************************************************************************
/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package tutorial.pkg6;

/**
 *
 * @author Jatin
 */
public class Main {

    
    public static void main(String[] args) {
        System.out.println( String.format("%.2f",(new Composite_tester("5+6*9")).calculate()));
    }
    
}


